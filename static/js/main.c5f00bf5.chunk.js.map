{"version":3,"sources":["components/calc.js","App.js","serviceWorker.js","index.js"],"names":["Calc","add1","setState","errors","screen","state","add2","add3","add4","add5","add6","add7","add8","add9","add0","add","min","mult","div","equal","eva","eval","result","error","clear","className","this","onClick","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.c5f00bf5.chunk.js","sourcesContent":["import React,{Component} from 'react';\r\nimport './calc.css'\r\n\r\nclass Calc extends  Component{\r\n  constructor(){\r\n    super()\r\n\r\n    this.state = {\r\n      screen : \"\",\r\n      result : \"\",\r\n      errors:\"\"\r\n    }\r\n  }\r\n\r\n  add1 = () => {\r\n    this.setState(\r\n      {\r\n        errors:'',\r\n        screen: this.state.screen += 1\r\n      }\r\n    );\r\n  }\r\n  add2 = () => {\r\n    this.setState(\r\n      {\r\n        errors:'',\r\n        screen: this.state.screen += 2\r\n      }\r\n    );\r\n  }\r\n  add3 = () => {\r\n    this.setState(\r\n      {\r\n        errors:'',\r\n        screen: this.state.screen += 3\r\n      }\r\n    );\r\n  }\r\n  add4 = () => {\r\n    this.setState(\r\n      {\r\n        errors:'',\r\n        screen: this.state.screen +=4\r\n      }\r\n    );\r\n  }\r\n  add5 = () => {\r\n    this.setState(\r\n      {\r\n        errors:'',\r\n        screen: this.state.screen += 5\r\n      }\r\n    );\r\n  }\r\n  add6 = () => {\r\n    this.setState(\r\n      {\r\n        errors:'',\r\n        screen: this.state.screen += 6\r\n      }\r\n    );\r\n  }\r\n  add7 = () => {\r\n    this.setState(\r\n      {\r\n        errors:'',\r\n        screen: this.state.screen += 7\r\n      }\r\n    );\r\n  }\r\n  add8 = () => {\r\n    this.setState(\r\n      {\r\n        errors:'',\r\n        screen: this.state.screen += 8\r\n      }\r\n    );\r\n  }\r\n  add9 = () => {\r\n    this.setState(\r\n      {\r\n        errors:'',\r\n        screen: this.state.screen += 9\r\n      }\r\n    );\r\n  }\r\n  add0 = () => {\r\n    this.setState(\r\n      {\r\n        errors:'',\r\n        screen: this.state.screen += 0\r\n      }\r\n    );\r\n  }\r\n  add = () => {\r\n    this.setState(\r\n      {\r\n        errors:'',\r\n        screen: this.state.screen += '+'\r\n      }\r\n    );\r\n  }\r\n  min = () => {\r\n    this.setState(\r\n      {\r\n        errors:'',\r\n        screen: this.state.screen += '-'\r\n      }\r\n    );\r\n  }\r\n  mult = () => {\r\n    this.setState(\r\n      {\r\n        errors:'',\r\n        screen: this.state.screen += '*'\r\n      }\r\n    );\r\n  }\r\n  div = () => {\r\n    this.setState(\r\n      {\r\n        errors:'',\r\n        screen: this.state.screen += '/'\r\n      }\r\n    );\r\n  }\r\n  equal = () => {\r\n   try{\r\n    let eva = eval(this.state.screen) ;\r\n    this.setState(\r\n      {result: eva }\r\n    );\r\n   }\r\n   catch(error){\r\n    this.setState(\r\n      {errors: 'syntax error',\r\n      screen: '',\r\n      result: ''\r\n\r\n      }\r\n    );\r\n   }\r\n  }\r\n  clear = () => {\r\n    this.setState(\r\n      {screen: \"\",\r\n      result: \"\",\r\n      errors:''\r\n     }\r\n    );\r\n  }\r\n\r\n\r\n  render(){\r\n    return(\r\n      <div className='wrapper'>\r\n      <div className='calc_screen'>\r\n        <p>{this.state.screen}</p>\r\n        <p>{this.state.result}</p>\r\n        <p>{this.state.errors}</p>\r\n      </div>\r\n      <div className='calc_body'>\r\n      \r\n         <span onClick={this.add7}>7</span>\r\n         <span onClick={this.add8}>8</span>\r\n         <span onClick={this.add9}>9</span>\r\n         <span onClick={this.div}>/</span>\r\n \r\n         <span onClick={this.add4}>4</span>\r\n         <span onClick={this.add5}>5</span>\r\n         <span onClick={this.add6}>6</span>\r\n         <span onClick={this.mult}>*</span>\r\n \r\n         <span onClick={this.add1}>1</span>\r\n         <span onClick={this.add2}>2</span>\r\n         <span onClick={this.add3}>3</span>\r\n         <span onClick={this.min}>-</span>\r\n \r\n         <span onClick={this.add0}>0</span>\r\n         <span onClick={this.clear}>clear</span>\r\n         <span onClick={this.add}>+</span>\r\n         <span onClick={this.equal} className=\"equal\">=</span>\r\n      </div>\r\n    </div>\r\n    );\r\n  \r\n  }\r\n}\r\n\r\nexport default Calc ;","import React from 'react';\nimport './App.css';\nimport Calc from './components/calc';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Calc />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}